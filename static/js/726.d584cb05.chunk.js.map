{"version":3,"file":"static/js/726.d584cb05.chunk.js","mappings":"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","sources":["modules/MoviesSearch/MoviesSearchForm/MoviesSearchForm.jsx","modules/MoviesSearch/MoviesSearch.jsx","pages/SearchPage/SearchPage.jsx","shared/api/movies.js"],"sourcesContent":["import { useState} from \"react\";\n\nconst MoviesSearchForm = ({onSubmit}) => {\n    const [ state, setState ] = useState({\n        search: \"\",\n    })\n\n    const handleChange = ({ target }) => {\n        const { name, value } = target;\n        setState(prevState => ({\n            ...prevState,\n            [name]: value,\n        }))\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit({ ...state });\n        setState({search: \"\"})\n    }\n\n    const { search } = state;\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                name=\"search\"\n                value={search}\n                onChange={handleChange}\n                type=\"text\"\n                placeholder=\"Search movies\"\n                required/>\n            <button type=\"submit\">Search</button>\n        </form>\n    )\n}\n\nexport default MoviesSearchForm;","import { useState, useEffect } from \"react\";\nimport { Link, useSearchParams } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport MoviesSearchForm from './MoviesSearchForm';\nimport { searchMovies } from \"shared/api/movies\";\n\nconst MoviesSearch = () => {\n\nconst [state, setState] = useState({\n        items: [],\n        loading: false,\n        error: null,\n    })\n    const [searchParams, setSearchParams] = useSearchParams();\n    const search = searchParams.get(\"search\");\n\n    useEffect(() => {\n        async function fetchMoviesBySearch() {\n            setState(prevState => ({\n                ...prevState, \n                loading: true,\n            }))\n            try {\n                const data = await searchMovies(search);\n                setState(prevState => ({\n                  ...prevState,\n                  loading: false,\n                    items: data.results,\n                }))\n            }\n            catch (error) {\n              setState((prevState) => {\n                return { ...prevState, loading: false, error };\n              });\n            }\n        }\n      if (search) {\n          fetchMoviesBySearch();\n        }\n    }, [search])\n    \n    const changeSearch = ({ search }) => setSearchParams({search});\n    const { items, error, loading } = state;\n\n      const elements = items.map(({ id, title }) => title !== undefined && <li key={id}>\n         <Link to={`/movies/${id}`}>{ title }</Link>\n    </li>)\n  \n  return (\n    <>\n      <MoviesSearchForm onSubmit={changeSearch} />\n      {loading && <p>...Loading</p>}\n      {error && <p>Movies not found</p>}\n      {items.length > 0 && <ul>{elements}</ul>}\n    </>\n  );\n}\n\nMoviesSearch.defaultProps = {\n  items: [],\n};\n\nMoviesSearch.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MoviesSearch;","import MoviesSearch from '../../modules/MoviesSearch';\n\nconst SearchPage = () => {\n    return (\n        <main>\n            <MoviesSearch />\n        </main>\n    )\n}\n\nexport default SearchPage;","import axios from \"axios\";\n\n// const API_KEY = '3dd73bc5602d72433e8418bc312e6ea9';\n// const BASE_URL = `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`;\n\n// export const getMovies = async () => await axios.get(BASE_URL);\n\n// const API_KEY = '3dd73bc5602d72433e8418bc312e6ea9';\n// const instance = axios.create({\n//     baseURL: 'https://api.themoviedb.org/3',\n// });\n\n\n\n// export const getMovies = async (page) => {\n//     const { data: {results} } = await instance.get(\"trending/movie/day\", {\n//         params: {\n//             api_key: API_KEY,\n//             page\n//         }\n//     });\n//     return results;\n// } \n\n// export default getMovies;\n\nconst instance = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n});\nconst APIkey = \"3dd73bc5602d72433e8418bc312e6ea9\";\n\nexport const getTrendingMovies = async (page = 1) => {\n  const {\n    data: { results },\n  } = await instance.get(\"trending/movie/day\", {\n    params: {\n      api_key: APIkey,\n      page,\n    },\n  });\n  return results;\n};\n\nexport const getMovieById = async (id) => {\n  const { data } = await instance.get(`movie/${id}`, {\n    params: {\n      api_key: APIkey,\n    },\n  });\n  return data;\n};\n\n// export const searchMovies = async (q) => {\n//   const {\n//     data: { results },\n//   } = await instance.get(\"search/movie\", {\n//     params: {\n//       api_key: APIkey,\n//       q\n//     },\n//   });\n//   return results;\n// };\n\nexport const searchMovies = async (query, page = 1) => {\n  const { data } = await instance.get(\"search/movie\", {\n    params: {\n      api_key: APIkey,\n      page,\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieCredits = async (id) => {\n  const { data } = await instance.get(`movie/${id}/credits`, {\n    params: {\n      api_key: APIkey,\n    },\n  });\n  return data.cast;\n};\n\nexport const getMovieReviews = async (id) => {\n  const { data } = await instance.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: APIkey,\n    },\n  });\n  return data.results;\n};\n"],"names":["onSubmit","useState","search","state","setState","e","preventDefault","name","value","onChange","target","prevState","type","placeholder","required","MoviesSearch","items","loading","error","useSearchParams","searchParams","setSearchParams","get","useEffect","searchMovies","data","results","fetchMoviesBySearch","elements","map","id","title","undefined","to","length","defaultProps","instance","axios","baseURL","APIkey","getTrendingMovies","page","params","api_key","getMovieById","query","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}